# z80 Instruction Table

#### INSTRUCTION
# INS [MNOMIC] [VALUE]
# MNOMIC is any series of case-insenstive characters with support for special
# characters to define additional functionality. MNOMIC may not have whitespace.
# Special Characters:
#  '_': Required whitespace
#  '-': Optional whitespace
#  '%#<bits[s]>': Immediate value (# is a character to use to identify later)
#  '^#<bits[s]>': Immediate value relative to PC (# is a character to use to identify later)
#  '@#<group>': Operand (# is a character to use to identify later)
#  '&': Special - RST value
# 
# VALUE is a value in binary, which may include references to immediate values and operands
# in use above. For example, in the MNOMIC "hello,-world_%A<16>_@B<a>", the value could be
# "01011 %A 10110 @B"
#
#### OPERAND GROUP
# OPERAND [GROUP NAME] [OPERAND NAME] [VALUE]
# GROUP NAME is the name of the operand group this belongs to. This is used to reference the
# group in a MNOMIC with the @ operator. OPERAND NAME is the name to match, such as A, B, IX,
# etc. VALUE is the value in binary of this operand.

# Z80 INSTRUCTION SET

#### OPERAND GROUPS
# GROUP 1
OPERAND g1 NZ 00
OPERAND g1 Z  01
OPERAND g1 NC 10
OPERAND g1 C  11

# GROUP 2
OPERAND g2 NZ 000
OPERAND g2 Z  001
OPERAND g2 NC 010
OPERAND g2 C  011
OPERAND g2 PO 100
OPERAND g2 PE 101
OPERAND g2 P  110
OPERAND g2 M  111

# GROUP 3
OPERAND g3 A    111
OPERAND g3 B    000
OPERAND g3 C    001
OPERAND g3 D    010
OPERAND g3 E    011
OPERAND g3 H    100
OPERAND g3 L    101
OPERAND g3 (HL) 110

# GROUP 4
OPERAND g4 BC 0
OPERAND g4 DE 1

# GROUP 5
OPERAND g5 I  0
OPERAND g5 R  1

# GROUP 6
OPERAND g6 BC 00
OPERAND g6 DE 01
OPERAND g6 HL 10
OPERAND g6 SP 11

# GROUP 7
OPERAND g7 BC 00
OPERAND g7 DE 01
OPERAND g7 HL 10
OPERAND g7 AF 11

# GROUP 8
OPERAND g8 IX 11011101
OPERAND g8 IY 11111101

# GROUP 9
OPERAND g9 BC 00
OPERAND g9 DE 01
OPERAND g9 IX 10
OPERAND g9 SP 11

# GROUP 10
OPERAND g10 BC 00
OPERAND g10 DE 01
OPERAND g10 IY 10
OPERAND g10 SP 11

# Most instructions were just lifted from Learn TI-83+ Assembly in 28 Days, they've got
# pretty nice instruction set documentation.
#### INSTRUCTIONS

#### DATA MOVEMENT

INS EX_DE-,-HL                          11101011
    INS EX_HL-,-DE                      11101011
INS EX_AF-,-AF'                         00001000
    INS EX_AF'-,-AF                     00001000
INS EX_(-SP-)-,-HL                      11100011
    INS EX_HL-,-(-SP-)                  11100011
INS EX_(-SP-)-,-@A<g8>                  @A 11100011
    INS EX_@A<g8>-,-(-SP-)              @A 11100011

INS EXX                                 11011001

INS LD_@A<g3>-,-@B<g3>                  01@A@B
INS LD_@A<g3>-,-%B<8>                   00@A110 %B
INS LD_@A<g3>-,-(-@B<g8>-+-%C<8>-)      @B 01@A110 %C
    INS LD_@A<g3>-,-(-%C<8>-+-@B<g8>-)  @B 01@A110 %C
    INS LD_@A<g3>-,-(-@B<g8>-)          @B 01@A110 00000000
INS LD_(-@A<g8>-+-%B<8>-)-,-@C<g3>      @A 01110@C %B
    INS LD_(-%B<8>-+-@A<g8>-)-,-@C<g3>  @A 01110@C %B
    INS LD_(-@A<g8>-)-,-@C<g3>          @A 01110@C 00000000
INS LD_(-@A<g8>-+-%B<8>-)-,-%C<8>       @A 00110110 %B %C
    INS LD_(-%B<8>-+-@A<g8>-)-,-%C<8>   @A 00110110 %B %C
    INS LD_(-@A<g8>-)-,-%C<8>           @A 00110110 %B 00000000
INS LD_A-,-(-@A<g4>-)                   000@A1010
INS LD_A-,-(-%A<16>-)                   00111010 %A
INS LD_(-@A<g4>-)-,-A                   000@A0010
INS LD_(-%A<16>-)-,-A                   00110010 %A
INS LD_A-,-@A<g5>                       11101101 0101@A111
INS LD_@A<g5>-,-A                       11101101 0100@A111
INS LD_@A<g6>-,-%B<16>                  00@A0001 %B
INS LD_@A<g8>-,-%B<16>                  @A 00100001 %B
INS LD_HL-,-(-%A<16>-)                  00101010 %A
INS LD_@A<g6>-,-(-%B<16>-)              11101101 01@A1011 %B
INS LD_@A<g8>-,-(-%B<16>-)              @A 00101010 %B
INS LD_(-%A<16>-)-,-HL                  00100010 %A
INS LD_(-%A<16>-)-,-@B<g6>              11101101 : 01@B0011 %A
INS LD_(-%A<16>-)-,-@B<g8>              @B 00100010 %A
INS LD_SP-,-HL                          11111001
INS LD_SP-,-@A<g8>                      @A 11111001

INS LDD                                 11101101 10101000

INS LDDR                                11101101 10111000

INS LDI                                 11101101 10100000

INS LDIR                                11101101 10110000

POP_@A<g7>                              11@A0001
POP_@A<g8>                              @A 11100001

PUSH_@A<g7>                             11@A0101
PUSH_@A<g8>                             @A 11100101

#### ARITHMETIC

INS ADC_A-,-@A<g3>                      10001@A
    INS ADC_@A<g3>-,-A                  10001@A
    INS ADC_@A<g3>                      10001@A
INS ADC_A-,-%A<8>                       11001110 %A
    INS ADC_%A<8>                       11001110 %A
INS ADC_A-,-(-@A<g8>-+-%B<8>-)          @A 10001110 %B
    INS ADC_A-,-(-%B<8>-+-@A<g8>-)      @A 10001110 %B
    INS ADC_A-,-(-@A<g8>-)              @A 10001110 00000000
INS ADC_HL-,-@A<g6>                     11101101 : 01@A1010

INS ADD_A-,-@A<g3>                      10000@A
    INS ADD_-@A<g3>-,-A                 10000@A
    INS ADD_@A<g3>                      10000@A
INS ADD_A-,-%A<8>                       11000110 %A
INS ADD_A-,-(-@A<g8>-+-%B<8>-)          @A 10000110 %B
    INS ADD_A-,-(-%B<8>-+-@A<g8>-)      @A 10000110 %B
    INS ADD_A-,-(-@A<g8>-)              @A 10000110 00000000
INS ADD_HL-,-@A<g6>                     00@A1001
INS ADD_IX-,-@A<g9>                     11011101 00@A1001
INS ADD_IY-,-@A<g10>                    11111101 00@A1001

INS CP_@A<g3>                           10111@A
    INS CP_A-,-@A<g3>                   10111@A
    INS CP_@A<g3>-,-A                   10111@A
INS CP_%A<8>                            11111110 %A
    INS CP_A-,-%A<8>                    11111110 %A
    INS CP_%A<8>-,-A                    11111110 %A
INS CP_(-@A<g8>-+-%B<8>-)               @A 10111110 %B
    INS CP_(-%B<8>-+-@A<g8>-)           @A 10111110 %B
    INS CP_A-,-(-%B<8>-+-@A<g8>-)       @A 10111110 %B
    INS CP_(-%B<8>-+-@A<g8>-)-,-A       @A 10111110 %B
    INS CP_A-,-(-@A<g8>-+-%B<8>-)       @A 10111110 %B
    INS CP_(-@A<g8>-+-%B<8>-)-,-A       @A 10111110 %B
    INS CP_(-@A<g8>-)-,-A               @A 10111110 00000000
    INS CP_A-,-(-@A<g8>-)               @A 10111110 00000000
    INS CP_(-@A<g8>-)                   @A 10111110 00000000

INS CPD                                 11101101 10101001

INS CPDR                                11101101 10111001

INS CPI                                 11101101 10100001

INS CPIR                                11101101 10110001

INS CPL                                 00101111

INS DAA                                 00100111

INS DEC_@A<g3>                          00@A101
INS DEC_(-@A<g8>-+-%B<8>-)              @A 00110101 %B
    INS DEC_(-%B<8>-+-@A<g8>-)          @A 00110101 %B
    INS DEC_(-@A<g8>-)                  @A 00110101 00000000
INS DEC_@A<g6>                          00@A1011
INS DEC_@A<g8>                          @A 00101011

INS INC_@A<g3>                          00@A100
INS INC_(-@A<g8>-+-%B<8>-)              @A 00110100 %B
    INS INC_(-%B<8>-+-@A<g8>-)          @A 00110100 %B
    INS INC_(-@A<g8>-)                  @A 00110100 00000000
INS INC_@A<g6>                          00@A0011
INS INC_@A<g8>                          @A 00100011

INS NEG                                 11101101 01000100

INS SBC_A-,-@A<g3>                      10011@A
    INS SBC_@A<g3>                      10011@A
INS SBC_A-,-%<8>                        11011110 %A
    INS SBC_%<8>                        11011110 %A
INS SBC_A-,-(-@A<g8>-+-%B<8>-)          @A 10011110 %B
    INS SBC_A-,-(-%B<8>-+-@A<g8>-)      @A 10011110 %B
    INS SBC_A-,-(-@A<g8>-)              @A 10011110 00000000
INS SBC_HL-,-@A<g6>                     11101101 01@A0010

INS SUB_A-,-@A<g3>                      10010@A
INS SUB_A-,-%A<8>                       11010110 %A
INS SUB_A-,-(-@A<g8>-+-%B<8>-)          @A 10010110 %B
    INS SUB_A-,-(-%B<8>-+-@A<g8>-)      @A 10010110 %B
    INS SUB_A-,-(-@A<g8>-)              @A 10010110 00000000